"use strict";(self.webpackChunkapi_documentation_tool=self.webpackChunkapi_documentation_tool||[]).push([[3992],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>h});var a=n(67294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var o=a.createContext({}),d=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},c=function(t){var e=d(t.components);return a.createElement(o.Provider,{value:e},t.children)},p="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,i=t.originalType,o=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),p=d(n),k=l,h=p["".concat(o,".").concat(k)]||p[k]||u[k]||i;return n?a.createElement(h,r(r({ref:e},c),{},{components:n})):a.createElement(h,r({ref:e},c))}));function h(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var i=n.length,r=new Array(i);r[0]=k;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=t,s[p]="string"==typeof t?t:l,r[1]=s;for(var d=2;d<i;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},55420:(t,e,n)=>{n.r(e),n.d(e,{contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>o});var a=n(87462),l=(n(67294),n(3905));const i={},r="List Transactions By Block Height",s={type:"api",id:"list-transactions-by-block-height",unversionedId:"list-transactions-by-block-height",title:"List Transactions By Block Height",description:"",slug:"/list-transactions-by-block-height",frontMatter:{},api:{description:"This endpoint will list transactions by an attribute transactionHash. In addition, the transactions listed will detail additional information such as time of creation in Unix timestamp, height, addresses, etc.\r\n\r\nAPI Unit - 1",tags:["Blockchain Data"],parameters:[{name:"blockchain",in:"path",description:"This refers to a specific blockchain protocol, such as Avalanche\r\n\r\nsupported chain: avalanche",required:!0,schema:{type:"string"}},{name:"network",in:"path",description:"The blockchain network consists of three distinct networks: mainnet, testnet, and ropsten. All three networks are based on the same technology and software, but the data they contain is different. Mainnet is the live network with real data, while testnet and ropsten are test networks with simulated data.\r\n\r\nExample: testnet\r\n\r\nPossible Values: mainnet, testnet",required:!0,schema:{type:"string"}},{name:"block",in:"path",description:'Represents the number of blocks in the blockchain preceding this specific block. Block numbers have no gaps. A blockchain usually starts with block 0, called the "Genesis block."\r\n\r\nExample: 673852',required:!0,schema:{type:"string"}},{name:"Authorization",in:"header",description:"Bearer 120dsjbjhbvd786w540j98y765365",required:!0,schema:{type:"string"}}],responses:{200:{description:"The request has been successful.",content:{"application/json":{schema:{type:"array",properties:{status:{type:"integer"},data:{type:"object",properties:{limit:{type:"string",description:"Represents the number of transaction list in response\n\nExample: 50"},offset:{type:"string",description:"Represents the"},total:{type:"string",description:"Represents the"},transactions:{type:"array",items:{type:"object",properties:{hash:{type:"string",description:"Represents the same as transactionId for account-based protocols like Avalanche\n\nExample:\n0xe91eeb7aca41cb41b6d32ffd841eee3a297ab9318e7467961ed43b5e0ee3e58e"},nonce:{type:"string",description:"Represents a random value that can be adjusted to satisfy the Proof of Work.\n\nExample: 1245"},transaction_index:{type:"string",description:"Represents the integer of the transactions index position in the block. null when it's pending."},from_address:{type:"string",description:"Represents a list of sender addresses with the respective amounts. In account-based protocols\n\nlike Ethereum, there is only one address in this list.\n\nExample: 0x36dc6504F070106128Ba0724F49dbb2FaBF7b1c4"},to_address:{type:"string",description:"Represents a list of recipient addresses with the respective amounts. In account-based protocols\n\nlike Ethereum, there is only one address in this list.\n\nExample: 0x36dc6504F070106128Ba0724F49dbb2FaBF7b1c4"},value:{type:"string",description:"Represents the value transferred in Wei."},gas:{type:"string",description:"Represents the gas provided by the sender.\n\nExample: 50508"},gas_price:{type:"string",description:"Represents the price offered to the miner to purchase this amount of gas.\n\nExample: 2994782927"},input:{type:"string",description:"Represents the additional information required for the transaction.\n\nexample:\n0x67a5cd0600000000000000000000000031f42841c2db5173425b5223809cf3a38fede360"},receipt_cumulative_gas_used:{type:"string",description:"Represents the total amount of gas used when this transaction was executed in the block.\n\nexample: 45917"},receipt_gas_used:{type:"string",description:"Represents the exact unit of gas that was used for the transaction.\n\nexample: 24673"},receipt_contract_address:{type:"string",description:"Represents the specific transaction contract.\n\nExample: 0x20fe562d797a42dcb3399062ae9546cd06f63280"}}}}}},error:{type:"boolean",description:"A 200 status code does not necessarily indicate that there is no error. It simply means that the request was successful and the server responded with the requested information. If there is an error, the server will usually respond with a different status code."}}}}}},400:{description:"We couldn't find the page you were looking for. Please double-check the URL and try again."},401:{description:"You're missing the required authorization header (API Key). Please refer to our Authorization section in the Documentation for more information.\r\n\r\nor\r\n\r\nThe auth_token is incorrect"},402:{description:"You don't have enough credits. To get more, upgrade your plan from your Dashboard or reach out to our team via email."},403:{description:"Your IP address has been blocked. To find out why, please reach out to our team via email."},404:{description:"No block matching the given criteria was located on the specified blockchain."},409:{description:"It appears that the data is not valid."},415:{description:"We regret to inform you that the media type you have chosen is not available at this time.  Please try selecting a different media type.. The Content-Type header should be 'application/json'"},429:{description:"You have reached the maximum number of requests allowed. If you need additional requests, please contact our team via email or upgrade your plan."},500:{description:"We apologize for the inconvenience caused. We are currently working to resolve an unexpected server error. Please try again later. If the issue persists, please contact our team via email to report it. Thank you for your patience."}},method:"get",path:"/{blockchain}/{network}/api/v1/blocks/height/{block}/transactions",servers:[{url:"https://app.develop.zeeve.io/shared-api/blockchain-data"}],info:{title:"",version:""},postman:{name:"List Transactions By Block Height",description:{content:"This endpoint will list transactions by an attribute transactionHash. In addition, the transactions listed will detail additional information such as time of creation in Unix timestamp, height, addresses, etc.\r\n\r\nAPI Unit - 1",type:"text/plain"},url:{path:[":blockchain",":network","api","v1","blocks","height",":block","transactions"],host:["{{baseUrl}}"],query:[],variable:[{description:{content:"(Required) This refers to a specific blockchain protocol, such as Avalanche\r\n\r\nsupported chain: avalanche",type:"text/plain"},type:"any",value:"<string>",key:"blockchain"},{description:{content:"(Required) The blockchain network consists of three distinct networks: mainnet, testnet, and ropsten. All three networks are based on the same technology and software, but the data they contain is different. Mainnet is the live network with real data, while testnet and ropsten are test networks with simulated data.\r\n\r\nExample: testnet\r\n\r\nPossible Values: mainnet, testnet",type:"text/plain"},type:"any",value:"<string>",key:"network"},{description:{content:'(Required) Represents the number of blocks in the blockchain preceding this specific block. Block numbers have no gaps. A blockchain usually starts with block 0, called the "Genesis block."\r\n\r\nExample: 673852',type:"text/plain"},type:"any",value:"<string>",key:"block"}]},header:[{description:{content:"(Required) Bearer 120dsjbjhbvd786w540j98y765365",type:"text/plain"},key:"Authorization",value:"<string>"}],method:"GET"}},source:"@site/openapi.json",sourceDirName:".",permalink:"/ledger-api-doc/ledger-api-doc/list-transactions-by-block-height",previous:{title:"Get Block Details By Block Hash",permalink:"/ledger-api-doc/ledger-api-doc/get-block-details-by-block-hash"},next:{title:"List Transactions By Block Hash",permalink:"/ledger-api-doc/ledger-api-doc/list-transactions-by-block-hash"}},o=[],d={toc:o};function c(t){let{components:e,...n}=t;return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"list-transactions-by-block-height"},"List Transactions By Block Height"),(0,l.kt)("p",null,"This endpoint will list transactions by an attribute transactionHash. In addition, the transactions listed will detail additional information such as time of creation in Unix timestamp, height, addresses, etc."),(0,l.kt)("p",null,"API Unit - 1"),(0,l.kt)("table",{style:{display:"table",width:"100%"}},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{style:{textAlign:"left"}},"Path Parameters"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"blockchain"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,l.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"This refers to a specific blockchain protocol, such as Avalanche"),(0,l.kt)("p",null,"supported chain: avalanche")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"network"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,l.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"The blockchain network consists of three distinct networks: mainnet, testnet, and ropsten. All three networks are based on the same technology and software, but the data they contain is different. Mainnet is the live network with real data, while testnet and ropsten are test networks with simulated data."),(0,l.kt)("p",null,"Example: testnet"),(0,l.kt)("p",null,"Possible Values: mainnet, testnet")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"block"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,l.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,'Represents the number of blocks in the blockchain preceding this specific block. Block numbers have no gaps. A blockchain usually starts with block 0, called the "Genesis block."'),(0,l.kt)("p",null,"Example: 673852")))))),(0,l.kt)("table",{style:{display:"table",width:"100%"}},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{style:{textAlign:"left"}},"Header Parameters"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"Authorization"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,l.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Bearer 120dsjbjhbvd786w540j98y765365")))))),(0,l.kt)("table",{style:{display:"table",width:"100%"}},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("div",{style:{display:"flex"}},(0,l.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,l.kt)("code",null,"200")),(0,l.kt)("div",null,(0,l.kt)("p",null,"The request has been successful."))),(0,l.kt)("div",null,(0,l.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,l.kt)("div",null)))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"status"),(0,l.kt)("span",{style:{opacity:"0.6"}}," integer"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"data"),(0,l.kt)("span",{style:{opacity:"0.6"}}," object"),(0,l.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"limit"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents the number of transaction list in response"),(0,l.kt)("p",null,"Example: 50")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"offset"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents the")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"total"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents the")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"transactions"),(0,l.kt)("span",{style:{opacity:"0.6"}}," object[]"),(0,l.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"hash"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents the same as transactionId for account-based protocols like Avalanche"),(0,l.kt)("p",null,"Example:\n0xe91eeb7aca41cb41b6d32ffd841eee3a297ab9318e7467961ed43b5e0ee3e58e")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"nonce"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents a random value that can be adjusted to satisfy the Proof of Work."),(0,l.kt)("p",null,"Example: 1245")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"transaction_index"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents the integer of the transactions index position in the block. null when it's pending.")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"from_address"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents a list of sender addresses with the respective amounts. In account-based protocols"),(0,l.kt)("p",null,"like Ethereum, there is only one address in this list."),(0,l.kt)("p",null,"Example: 0x36dc6504F070106128Ba0724F49dbb2FaBF7b1c4")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"to_address"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents a list of recipient addresses with the respective amounts. In account-based protocols"),(0,l.kt)("p",null,"like Ethereum, there is only one address in this list."),(0,l.kt)("p",null,"Example: 0x36dc6504F070106128Ba0724F49dbb2FaBF7b1c4")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"value"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents the value transferred in Wei.")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"gas"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents the gas provided by the sender."),(0,l.kt)("p",null,"Example: 50508")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"gas_price"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents the price offered to the miner to purchase this amount of gas."),(0,l.kt)("p",null,"Example: 2994782927")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"input"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents the additional information required for the transaction."),(0,l.kt)("p",null,"example:\n0x67a5cd0600000000000000000000000031f42841c2db5173425b5223809cf3a38fede360")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"receipt_cumulative_gas_used"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents the total amount of gas used when this transaction was executed in the block."),(0,l.kt)("p",null,"example: 45917")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"receipt_gas_used"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents the exact unit of gas that was used for the transaction."),(0,l.kt)("p",null,"example: 24673")))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"receipt_contract_address"),(0,l.kt)("span",{style:{opacity:"0.6"}}," string"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"Represents the specific transaction contract."),(0,l.kt)("p",null,"Example: 0x20fe562d797a42dcb3399062ae9546cd06f63280")))))))))))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"error"),(0,l.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,l.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,l.kt)("p",null,"A 200 status code does not necessarily indicate that there is no error. It simply means that the request was successful and the server responded with the requested information. If there is an error, the server will usually respond with a different status code."))))))))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("div",{style:{display:"flex"}},(0,l.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,l.kt)("code",null,"400")),(0,l.kt)("div",null,(0,l.kt)("p",null,"We couldn't find the page you were looking for. Please double-check the URL and try again."))),(0,l.kt)("div",null))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("div",{style:{display:"flex"}},(0,l.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,l.kt)("code",null,"401")),(0,l.kt)("div",null,(0,l.kt)("p",null,"You're missing the required authorization header (API Key). Please refer to our Authorization section in the Documentation for more information."),(0,l.kt)("p",null,"or"),(0,l.kt)("p",null,"The auth_token is incorrect"))),(0,l.kt)("div",null))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("div",{style:{display:"flex"}},(0,l.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,l.kt)("code",null,"402")),(0,l.kt)("div",null,(0,l.kt)("p",null,"You don't have enough credits. To get more, upgrade your plan from your Dashboard or reach out to our team via email."))),(0,l.kt)("div",null))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("div",{style:{display:"flex"}},(0,l.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,l.kt)("code",null,"403")),(0,l.kt)("div",null,(0,l.kt)("p",null,"Your IP address has been blocked. To find out why, please reach out to our team via email."))),(0,l.kt)("div",null))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("div",{style:{display:"flex"}},(0,l.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,l.kt)("code",null,"404")),(0,l.kt)("div",null,(0,l.kt)("p",null,"No block matching the given criteria was located on the specified blockchain."))),(0,l.kt)("div",null))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("div",{style:{display:"flex"}},(0,l.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,l.kt)("code",null,"409")),(0,l.kt)("div",null,(0,l.kt)("p",null,"It appears that the data is not valid."))),(0,l.kt)("div",null))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("div",{style:{display:"flex"}},(0,l.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,l.kt)("code",null,"415")),(0,l.kt)("div",null,(0,l.kt)("p",null,"We regret to inform you that the media type you have chosen is not available at this time.  Please try selecting a different media type.. The Content-Type header should be 'application/json'"))),(0,l.kt)("div",null))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("div",{style:{display:"flex"}},(0,l.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,l.kt)("code",null,"429")),(0,l.kt)("div",null,(0,l.kt)("p",null,"You have reached the maximum number of requests allowed. If you need additional requests, please contact our team via email or upgrade your plan."))),(0,l.kt)("div",null))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("div",{style:{display:"flex"}},(0,l.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,l.kt)("code",null,"500")),(0,l.kt)("div",null,(0,l.kt)("p",null,"We apologize for the inconvenience caused. We are currently working to resolve an unexpected server error. Please try again later. If the issue persists, please contact our team via email to report it. Thank you for your patience."))),(0,l.kt)("div",null))))))}c.isMDXComponent=!0}}]);