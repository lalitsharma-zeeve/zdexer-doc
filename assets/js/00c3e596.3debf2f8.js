"use strict";(self.webpackChunkapi_documentation_tool=self.webpackChunkapi_documentation_tool||[]).push([[1439],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>k});var a=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,i=function(t,e){if(null==t)return{};var n,a,i={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var s=a.createContext({}),c=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},d=function(t){var e=c(t.components);return a.createElement(s.Provider,{value:e},t.children)},p="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},h=a.forwardRef((function(t,e){var n=t.components,i=t.mdxType,l=t.originalType,s=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),p=c(n),h=i,k=p["".concat(s,".").concat(h)]||p[h]||u[h]||l;return n?a.createElement(k,r(r({ref:e},d),{},{components:n})):a.createElement(k,r({ref:e},d))}));function k(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var l=n.length,r=new Array(l);r[0]=h;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[p]="string"==typeof t?t:i,r[1]=o;for(var c=2;c<l;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},96707:(t,e,n)=>{n.r(e),n.d(e,{contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(87462),i=(n(67294),n(3905));const l={},r="Get Block Details By Block Height",o={type:"api",id:"get-block-details-by-block-height",unversionedId:"get-block-details-by-block-height",title:"Get Block Details By Block Height",description:"",slug:"/get-block-details-by-block-height",frontMatter:{},api:{tags:["Blockchain Data"],description:"Customers can use this endpoint to get basic information about a mined block by providing the height parameter. This information may include the block's hash, the hash of the previous block, the number of transactions count, the height, and other blockchain-specific data like nonce, size, hash, logs, etc.\r\n\r\nAPI Unit - 1",parameters:[{name:"blockchain",in:"path",description:"This refers to a specific blockchain protocol, such as Avalanche\r\n\r\nsupported chain: avalanche",required:!0,schema:{type:"string"}},{name:"network",in:"path",description:"The blockchain network consists of three distinct networks: mainnet, testnet, and ropsten. All three networks are based on the same technology and software, but the data they contain is different. Mainnet is the live network with real data, while testnet and ropsten are test networks with simulated data.\r\n\r\nExample: testnet\r\n\r\nPossible Values: mainnet, testnet",required:!0,schema:{type:"string"}},{name:"block",in:"path",description:'This block is part of a blockchain, and its number indicates the amount of blocks that have come before it. Block numbers are continuous, meaning there are no skipped numbers. The first block in a blockchain is usually referred to as the "Genesis block" and is numbered 0. \r\n\r\nExample: 673852',required:!0,schema:{type:"string"}},{name:"Authorization",in:"header",description:"Bearer 120dsjbjhbvd786w540j98y765365",required:!0,schema:{type:"string"}}],responses:{200:{description:"HTTP Status Code: 200\r\n\r\nContent-Type: application/json\r\n\r\nThe request has been successful.",content:{"application/json":{schema:{type:"array",properties:{status:{type:"integer"},data:{type:"object",properties:{timestamp:{type:"string",description:"Defines the exact date/time when this block was mined in Unix\n\nExample: 2020-09-25T14:14:02",required:!0},number:{type:"integer",description:'This particular block is part of a blockchain, and its number is indicative of the amount of blocks that have come before it. Block numbers are always consecutive, starting with the "Genesis block" (block 0).\n\nExample : 10'},hash:{type:"string",description:"The hash of a block is its unique identifier, created by running the block header through the SHA256 algorithm twice. This cryptographic digital fingerprint ensures the block's authenticity.\n\nExample: 0x0af6d14cf36b0d52e0b49747460859804fcd7a6f8518fe374fba05c96c27d35a"},parent_hash:{type:"string",description:"The parent block's hash is its unique identifier, created by running the block header through the SHA256 algorithm twice to create a cryptographic digital fingerprint.\n\nExample: 0x0af6d14cf36b0d52e0b49747460859804fcd7a6f8518fe374fba05c96c27d35a"},nonce:{type:"string",description:"This is a random value that can be adjusted to meet the requirements of a Proof of Work system. It can be used to verify that a certain amount of computational effort has been expended in order to solve a problem.\n\nExample: 0x0000000000000000"},sha3_uncles:{type:"string",description:"Represents the combined hash of all uncles for a given parent.\n\nExample: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"},logs_bloom:{type:"string",description:"This Bloom Filter represents the logs of a Block; it is set to null if the Block is pending."},transactions_root:{type:"string",description:"This is the root node of the transaction trie for the given block.\n\nExample:\n0x237cc8fb9965f0f7477bd6c06583aecb0b17af8cc8915d6990894c00762f0e4a"},state_root:{type:"string",description:"This represents the base of the trie structure that stores the final state of a block.\n\nExample:\n0x22e2b78756f092431f28ccc906cacc1a1c58d9b341b87fa86ba3af4141517f3d"},receipts_root:{type:"string",description:"This represents the base of the transaction tree for the block.\n\nExample:\n0x056b23fbba480696b65fe5a59b8f2148a1299103c4f57df839233af2cf4ca2d2"},miner:{type:"string",description:"It indicates the address of the recipient who received the mining rewards\n\nExample:\n0x0100000000000000000000000000000000000000"},size:{type:"string",description:"This indicates the total number of bytes in the block.\n\nExample : 3892"},extra_data:{type:"string",description:"This refers to any information that the miner can include in the block they are mining.\n\n Example: 0x"},gas_limit:{type:"string",description:"Specifies the maximum gas limit that can be used by all transactions in a block.\n\nExample : 3141592"},gas_used:{type:"string",description:"This block's total gas consumption is represented.\n\nExample : 21000"},transaction_count:{type:"integer",description:"This block contains a total of all transactions.\n\nExample: 12"},base_fee_per_gas:{type:"string",description:"This figure represents the total amount of gas consumed for all transactions.\n\nExample: 0"}}},error:{type:"boolean",description:"A 200 status code does not necessarily indicate that there is no error. It simply means that the request was successful and the server responded with the requested information. If there is an error, the server will usually respond with a different status code."}}},examples:{block200:{value:{status:200,data:{timestamp:"2020-09-25T14:14:02.000Z",number:10,hash:"0x0af6d14cf36b0d52e0b49747460859804fcd7a6f8518fe374fba05c96c27d35a",parent_hash:"0xbd9c3e357b29f403a2b5ba455960e17f595f82eb84e5e9a1c7f7bdaf4784d0e6",nonce:"0x0000000000000000",sha3_uncles:"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",logs_bloom:"0xtransactions_root:"0x237cc8fb9965f0f7477bd6c06583aecb0b17af8cc8915d6990894c00762f0e4a",state_root:"0x22e2b78756f092431f28ccc906cacc1a1c58d9b341b87fa86ba3af4141517f3d",receipts_root:"0x056b23fbba480696b65fe5a59b8f2148a1299103c4f57df839233af2cf4ca2d2",miner:"0x0100000000000000000000000000000000000000",size:714,extra_data:"0x",gas_limit:99027733,gas_used:21e3,transaction_count:1,base_fee_per_gas:0}}}}}}},400:{description:"We couldn't find the page you were looking for. Please double-check the URL and try again."},401:{description:"You're missing the required authorization header (API Key). Please refer to our Authorization section in the Documentation for more information.\r\n\r\nor\r\n\r\nThe auth_token is incorrect"},402:{description:"You don't have enough credits. To get more, upgrade your plan from your Dashboard or reach out to our team via email."},403:{description:"Your IP address has been blocked. To find out why, please reach out to our team via email."},404:{description:"No block matching the given criteria was located on the specified blockchain."},409:{description:"It appears that the data is not valid."},415:{description:"We regret to inform you that the media type you have chosen is not available at this time.  Please try selecting a different media type.. The Content-Type header should be 'application/json'"},429:{description:"You have reached the maximum number of requests allowed. If you need additional requests, please contact our team via email or upgrade your plan."},500:{description:"We apologize for the inconvenience caused. We are currently working to resolve an unexpected server error. Please try again later. If the issue persists, please contact our team via email to report it. Thank you for your patience."}},method:"get",path:"/{blockchain}/{network}/api/v1/blocks/height/{block}",servers:[{url:"https://app.develop.zeeve.io/shared-api/blockchain-data"}],info:{title:"",version:""},postman:{name:"Get Block Details By Block Height",description:{content:"Customers can use this endpoint to get basic information about a mined block by providing the height parameter. This information may include the block's hash, the hash of the previous block, the number of transactions count, the height, and other blockchain-specific data like nonce, size, hash, logs, etc.\r\n\r\nAPI Unit - 1",type:"text/plain"},url:{path:[":blockchain",":network","api","v1","blocks","height",":block"],host:["{{baseUrl}}"],query:[],variable:[{description:{content:"(Required) This refers to a specific blockchain protocol, such as Avalanche\r\n\r\nsupported chain: avalanche",type:"text/plain"},type:"any",value:"<string>",key:"blockchain"},{description:{content:"(Required) The blockchain network consists of three distinct networks: mainnet, testnet, and ropsten. All three networks are based on the same technology and software, but the data they contain is different. Mainnet is the live network with real data, while testnet and ropsten are test networks with simulated data.\r\n\r\nExample: testnet\r\n\r\nPossible Values: mainnet, testnet",type:"text/plain"},type:"any",value:"<string>",key:"network"},{description:{content:'(Required) This block is part of a blockchain, and its number indicates the amount of blocks that have come before it. Block numbers are continuous, meaning there are no skipped numbers. The first block in a blockchain is usually referred to as the "Genesis block" and is numbered 0. \r\n\r\nExample: 673852',type:"text/plain"},type:"any",value:"<string>",key:"block"}]},header:[{description:{content:"(Required) Bearer 120dsjbjhbvd786w540j98y765365",type:"text/plain"},key:"Authorization",value:"<string>"}],method:"GET"}},source:"@site/openapi.json",sourceDirName:".",permalink:"/ledger-api-doc/ledger-api-doc/get-block-details-by-block-height",next:{title:"Get Block Details By Block Hash",permalink:"/ledger-api-doc/ledger-api-doc/get-block-details-by-block-hash"}},s=[],c={toc:s};function d(t){let{components:e,...n}=t;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"get-block-details-by-block-height"},"Get Block Details By Block Height"),(0,i.kt)("p",null,"Customers can use this endpoint to get basic information about a mined block by providing the height parameter. This information may include the block's hash, the hash of the previous block, the number of transactions count, the height, and other blockchain-specific data like nonce, size, hash, logs, etc."),(0,i.kt)("p",null,"API Unit - 1"),(0,i.kt)("table",{style:{display:"table",width:"100%"}},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{style:{textAlign:"left"}},"Path Parameters"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"blockchain"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"This refers to a specific blockchain protocol, such as Avalanche"),(0,i.kt)("p",null,"supported chain: avalanche")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"network"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The blockchain network consists of three distinct networks: mainnet, testnet, and ropsten. All three networks are based on the same technology and software, but the data they contain is different. Mainnet is the live network with real data, while testnet and ropsten are test networks with simulated data."),(0,i.kt)("p",null,"Example: testnet"),(0,i.kt)("p",null,"Possible Values: mainnet, testnet")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"block"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,'This block is part of a blockchain, and its number indicates the amount of blocks that have come before it. Block numbers are continuous, meaning there are no skipped numbers. The first block in a blockchain is usually referred to as the "Genesis block" and is numbered 0. '),(0,i.kt)("p",null,"Example: 673852")))))),(0,i.kt)("table",{style:{display:"table",width:"100%"}},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{style:{textAlign:"left"}},"Header Parameters"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"Authorization"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"Bearer 120dsjbjhbvd786w540j98y765365")))))),(0,i.kt)("table",{style:{display:"table",width:"100%"}},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("div",{style:{display:"flex"}},(0,i.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,i.kt)("code",null,"200")),(0,i.kt)("div",null,(0,i.kt)("p",null,"HTTP Status Code: 200"),(0,i.kt)("p",null,"Content-Type: application/json"),(0,i.kt)("p",null,"The request has been successful."))),(0,i.kt)("div",null,(0,i.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,i.kt)("div",null)))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"status"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"data"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object"),(0,i.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"timestamp"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"Defines the exact date/time when this block was mined in Unix"),(0,i.kt)("p",null,"Example: 2020-09-25T14:14:02")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"number"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,'This particular block is part of a blockchain, and its number is indicative of the amount of blocks that have come before it. Block numbers are always consecutive, starting with the "Genesis block" (block 0).'),(0,i.kt)("p",null,"Example : 10")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"hash"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The hash of a block is its unique identifier, created by running the block header through the SHA256 algorithm twice. This cryptographic digital fingerprint ensures the block's authenticity."),(0,i.kt)("p",null,"Example: 0x0af6d14cf36b0d52e0b49747460859804fcd7a6f8518fe374fba05c96c27d35a")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"parent_hash"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The parent block's hash is its unique identifier, created by running the block header through the SHA256 algorithm twice to create a cryptographic digital fingerprint."),(0,i.kt)("p",null,"Example: 0x0af6d14cf36b0d52e0b49747460859804fcd7a6f8518fe374fba05c96c27d35a")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"nonce"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"This is a random value that can be adjusted to meet the requirements of a Proof of Work system. It can be used to verify that a certain amount of computational effort has been expended in order to solve a problem."),(0,i.kt)("p",null,"Example: 0x0000000000000000")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"sha3_uncles"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"Represents the combined hash of all uncles for a given parent."),(0,i.kt)("p",null,"Example: 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"logs_bloom"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"This Bloom Filter represents the logs of a Block; it is set to null if the Block is pending.")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"transactions_root"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"This is the root node of the transaction trie for the given block."),(0,i.kt)("p",null,"Example:\n0x237cc8fb9965f0f7477bd6c06583aecb0b17af8cc8915d6990894c00762f0e4a")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"state_root"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"This represents the base of the trie structure that stores the final state of a block."),(0,i.kt)("p",null,"Example:\n0x22e2b78756f092431f28ccc906cacc1a1c58d9b341b87fa86ba3af4141517f3d")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"receipts_root"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"This represents the base of the transaction tree for the block."),(0,i.kt)("p",null,"Example:\n0x056b23fbba480696b65fe5a59b8f2148a1299103c4f57df839233af2cf4ca2d2")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"miner"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"It indicates the address of the recipient who received the mining rewards"),(0,i.kt)("p",null,"Example:\n0x0100000000000000000000000000000000000000")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"size"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"This indicates the total number of bytes in the block."),(0,i.kt)("p",null,"Example : 3892")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"extra_data"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"This refers to any information that the miner can include in the block they are mining."),(0,i.kt)("p",null," Example: 0x")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"gas_limit"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"Specifies the maximum gas limit that can be used by all transactions in a block."),(0,i.kt)("p",null,"Example : 3141592")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"gas_used"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"This block's total gas consumption is represented."),(0,i.kt)("p",null,"Example : 21000")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"transaction_count"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"This block contains a total of all transactions."),(0,i.kt)("p",null,"Example: 12")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"base_fee_per_gas"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"This figure represents the total amount of gas consumed for all transactions."),(0,i.kt)("p",null,"Example: 0")))))))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"error"),(0,i.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"A 200 status code does not necessarily indicate that there is no error. It simply means that the request was successful and the server responded with the requested information. If there is an error, the server will usually respond with a different status code."))))))))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("div",{style:{display:"flex"}},(0,i.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,i.kt)("code",null,"400")),(0,i.kt)("div",null,(0,i.kt)("p",null,"We couldn't find the page you were looking for. Please double-check the URL and try again."))),(0,i.kt)("div",null))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("div",{style:{display:"flex"}},(0,i.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,i.kt)("code",null,"401")),(0,i.kt)("div",null,(0,i.kt)("p",null,"You're missing the required authorization header (API Key). Please refer to our Authorization section in the Documentation for more information."),(0,i.kt)("p",null,"or"),(0,i.kt)("p",null,"The auth_token is incorrect"))),(0,i.kt)("div",null))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("div",{style:{display:"flex"}},(0,i.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,i.kt)("code",null,"402")),(0,i.kt)("div",null,(0,i.kt)("p",null,"You don't have enough credits. To get more, upgrade your plan from your Dashboard or reach out to our team via email."))),(0,i.kt)("div",null))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("div",{style:{display:"flex"}},(0,i.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,i.kt)("code",null,"403")),(0,i.kt)("div",null,(0,i.kt)("p",null,"Your IP address has been blocked. To find out why, please reach out to our team via email."))),(0,i.kt)("div",null))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("div",{style:{display:"flex"}},(0,i.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,i.kt)("code",null,"404")),(0,i.kt)("div",null,(0,i.kt)("p",null,"No block matching the given criteria was located on the specified blockchain."))),(0,i.kt)("div",null))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("div",{style:{display:"flex"}},(0,i.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,i.kt)("code",null,"409")),(0,i.kt)("div",null,(0,i.kt)("p",null,"It appears that the data is not valid."))),(0,i.kt)("div",null))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("div",{style:{display:"flex"}},(0,i.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,i.kt)("code",null,"415")),(0,i.kt)("div",null,(0,i.kt)("p",null,"We regret to inform you that the media type you have chosen is not available at this time.  Please try selecting a different media type.. The Content-Type header should be 'application/json'"))),(0,i.kt)("div",null))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("div",{style:{display:"flex"}},(0,i.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,i.kt)("code",null,"429")),(0,i.kt)("div",null,(0,i.kt)("p",null,"You have reached the maximum number of requests allowed. If you need additional requests, please contact our team via email or upgrade your plan."))),(0,i.kt)("div",null))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("div",{style:{display:"flex"}},(0,i.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,i.kt)("code",null,"500")),(0,i.kt)("div",null,(0,i.kt)("p",null,"We apologize for the inconvenience caused. We are currently working to resolve an unexpected server error. Please try again later. If the issue persists, please contact our team via email to report it. Thank you for your patience."))),(0,i.kt)("div",null))))))}d.isMDXComponent=!0}}]);